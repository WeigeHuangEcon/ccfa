data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
formla=lcfincome~lfincome
xformla=~hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
cl=7
B=7
ALIGE=localIGE(formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
sd_ALIGE=sdF(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h)
formla=as.formula(formla)
xformla=as.formula(xformla)
YT=model.frame(terms(formla,data=data),data=data)
X=model.frame(terms(xformla,data=data),data=data)
Y=YT[,1]
T=YT[,2]
Xmat=as.matrix(X)
llscm_wb <- function(t, Y, T, Xmat, h) {
dd <- TempleMetrics::llscm.inner(t, Y, T, Xmat, h)
X <- cbind(Xmat, (T - t)*Xmat)
y <- as.matrix(Y)
if (is.null(h)) {
h <- 1.06*sd(T)*n^(-1/5) ## check that this is right
}
K <- diag(TempleMetrics::k(T-t, h=h, type="gaussian"))
u=y-X%*%dd
v=c(-(sqrt(5)-1)/2,(sqrt(5)+1)/2)
b_v=rbinom(nrow(X), 1, prob=(sqrt(5)+1)/(2*sqrt(5)))
b_v=ifelse(b_v==1,v[1],v[2])
yhat=X%*%dd + u*b_v
d <- solve(t(X)%*%K%*%X)%*%t(X)%*%K%*%yhat
d
}
localIGE.inner_wb <- function(t, Y, T, Xmat, h) {
dd <- llscm_wb(t,Y,T,Xmat,h)
xbar <- as.matrix(apply(Xmat, 2, mean))
m <- ncol(Xmat)
d <- dd[(m+1):length(dd)]
t(xbar)%*%d
}
localIGE_wb <- function(tvals, Y, T, Xmat,h) {
seq=tvals
for (i in 1:length(tvals)) {
seq[i]=localIGE.inner_wb(tvals[i], Y, T, Xmat, h)
}
seq
}
localIGE_wb(tvals, Y, T, Xmat,h)
B=7
bmat=sapply(1:B, localIGE_wb, Y=Y,T=T,Xmat=Xmat,h=h,tvals=tvals)
bmat=Lapply(1:B, localIGE_wb, Y=Y,T=T,Xmat=Xmat,h=h,tvals=tvals)
bmat=lapply(1:B, localIGE_wb, Y=Y,T=T,Xmat=Xmat,h=h,tvals=tvals)
bmat=vapply(1:B, localIGE_wb, Y=Y,T=T,Xmat=Xmat,h=h,tvals=tvals)
library(ccfa)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
formla=lcfincome~lfincome
xformla=~hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
cl=7
B=7
ALIGE=localIGE(formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
sd_ALIGE=sdF(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h)
Plot_ALIGE(ALIGE,sd_ALIGE,xlab="t",ylab="ALIGE")
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
formla=lcfincome~lfincome
xformla=~hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
cl=1
data=igm
localIGE(formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
formla=lcfincome~lfincome
xformla=~hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
B=7
sdF(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h)
devtools::install_github("WeigeHuangEcon/ccfa")
devtools::install_github("WeigeHuangEcon/TempleMetrics")
library(TempleMetrics)
library(ccfa)
devtools::install_github("WeigeHuangEcon/TempleMetrics")
devtools::install_github("WeigeHuangEcon/ccfa")
library(TempleMetrics)
library(ccfa)
library(ccfa)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
formla=lcfincome~lfincome
xformla=~hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
B=7
sdF(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
formla=lcfincome~lfincome
xformla=~hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
cl=1
data=igm
localIGE(formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
formla=lcfincome~lfincome
xformla=~hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
cl=1
data=igm
localIGE(formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
library(TempleMetrics)
library(ccfa)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
formla=lcfincome~lfincome
xformla=~hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
cl=7
B=7
ALIGE=localIGE(formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
sd_ALIGE=sdF(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h)
Plot_ALIGE(ALIGE,sd_ALIGE,xlab="t",ylab="ALIGE")
library(ccfa)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
igm$const=1
formla=lcfincome~lfincome
xformla=~const+hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
cl=1
data=igm
localIGE(formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
igm$const=1
formla=lcfincome~lfincome
xformla=~const+hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
B=7
sdF(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
igm$const=1
formla=lcfincome~lfincome
xformla=~const+hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
cl=1
B=7
ALIGE=localIGE(formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
sd_ALIGE=sdF(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h)
Plot_ALIGE(ALIGE,sd_ALIGE,xlab="t",ylab="ALIGE")
library(ccfa)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
igm$const=1
formla=lcfincome~lfincome
xformla=~const+hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
B=7
cl=1
LLIGE(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
out=LLIGE(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
summary.LLIGE(out)
summary.LLIGE(out)
#' @title summary.LLIGE
#'
#' @description prints a summary of a \code{LLIGE} object
#'
#' @param object an \code{LLIGE} object
#' @param ... extra arguments
#'
#' @export
summary.LLIGE <- function(object, ...) {
citation()
object
}
summary.LLIGE(out)
citation()
library(ccfa)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
igm$const=1
formla=lcfincome~lfincome
xformla=~const+hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
B=7
cl=1
out=LLIGE(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
summary.LLIGE(out)
out
summary.LLIGE(out)
#' @title citation
#'
#' @description print the citation for the relevant paper
#'
#' @keywords internal
citation <- function() {
cat("\nReference: Callaway, Brantly and Huang, Weige  \"Local Intergenerational Elasticities\" Working Paper <https://bcallaway11.github.io/files/Callaway-Huang-LIGE/lige.pdf>, 2018. \n")
}
summary.LLIGE(out)
library(ccfa)
rm(list=ls())
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
igm$const=1
formla=lcfincome~lfincome
xformla=~const+hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
B=7
cl=1
out=LLIGE(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
summary.LLIGE(out)
out
summary.LLIGE(out)
library(ccfa)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
igm$const=1
formla=lcfincome~lfincome
xformla=~const+hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
B=7
cl=1
out=LLIGE(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
summary.LLIGE(out)
library(ccfa)
out=LLIGE(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
summary.LLIGE(out)
library(ccfa)
summary.LLIGE(out)
?summary.LLIGE
summary.LLIGE(out)
citation <- function() {
cat("\nReference: Callaway, Brantly and Huang, Weige  \"Local Intergenerational Elasticities\" Working Paper <https://bcallaway11.github.io/files/Callaway-Huang-LIGE/lige.pdf>, 2018. \n")
}
summary.LLIGE(out)
summary.localIGE <- function(object, ...) {
citation()
object
}
summary.LLIGE(out)
summary.LLIGE <- function(object, ...) {
citation()
object
}
summary.LLIGE(out)
library(ccfa)
library(ccfa)
rm(list=list())
rm(list=ls())
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
igm$const=1
formla=lcfincome~lfincome
xformla=~const+hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
B=7
cl=1
out=LLIGE(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
summary.LLIGE(out)
library(ccfa)
summary.LLIGE(out)
summaryLLIGE(out)
uu=localIGE(formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
summaryLLIGE(uu)
summary.localIGE(uu)
library(ccfa)
summary_localIGE(uu)
library(ccfa)
library(ccfa)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
igm$const=1
rm(list=ls())
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
igm$const=1
formla=lcfincome~lfincome
xformla=~const+hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
cl=1
data=igm
object=localIGE(formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
summary_localIGE (object)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
igm$const=1
formla=lcfincome~lfincome
xformla=~const+hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
B=7
cl=1
object=LLIGE(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
summary_LLIGE(object)
ALIGE=localIGE(formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
sd_ALIGE=sdF(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h)
Plot_ALIGE(ALIGE,sd_ALIGE,xlab="t",ylab="ALIGE")
library(ccfa)
library(ccfa)
library(ccfa)
?lm
?plot
library(ccfa)
library(ccfa)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
formla=lcfincome~lfincome
xformla=~hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
cl=1
B=7
ALIGE=localIGE(formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
sd_ALIGE=sdF(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h)
Plot_ALIGE(tvals,ALIGE,sd_ALIGE,xlab="t",ylab="ALIGE")
library(devtools)
check()
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
formla=lcfincome~lfincome
xformla=~hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
B=7
cl=1
LLIGE(B,formla=formla, xformla=NULL, data=data,tvals=tvals,h=h,cl=7)
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
formla=lcfincome~lfincome
xformla=~hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
data=igm
cl=1
B=7
ALIGE=localIGE(formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
sd_ALIGE=sdF(B,formla=formla, xformla=xformla, data=data,tvals=tvals,h=h)
Plot_ALIGE(ALIGE,sd_ALIGE,xlab="t",ylab="ALIGE")
sd_ALIGE
Plot_ALIGE(tvals,ALIGE,sd_ALIGE,xlab="t",ylab="ALIGE",ylim=c(0,1))
object=LLIGE(B,formla=formla, xformla=NULL, data=data,tvals=tvals,h=h,cl=cl)
summary_LLIGE(object)
sdF(B,formla=formla, xformla=NULL, data=data,tvals=tvals,h=h)
install.packages("roxygen2")
install.packages("roxygen2")
library(roxygen2)
library(roxygen2)
library(devtools)
library(devtools)
library(roxygen2)
install.packages("roxygen2")
install.packages("roxygen2")
library(devtools)
library(roxygen2)
detach("package:roxygen2", unload=TRUE)
library("roxygen2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:roxygen2", unload=TRUE)
library("roxygen2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
??pkgdown
?pkgdown
data(igm)
igm$hs=ifelse(igm$HEDUC=="HS",1,0)
igm$col=ifelse(igm$HEDUC=="COL",1,0)
igm$const=1
formla=lcfincome~lfincome
xformla=~const+hs+col
tvals=seq(quantile(igm$lfincome,probs = 0.1),quantile(igm$lfincome,probs = 0.9),length.out = 10)
h=1.2
cl=1
data=igm
hh=localIGE(formla=formla, xformla=xformla, data=data,tvals=tvals,h=h,cl=cl)
summary.localIGE(hh)
install.packages("roxygen2",lib = .Library)
install.packages("roxygen2", lib = .Library)
library(devtools)
library(roxygen2)
install_version("roxygen2", version = "6.1.0.9", repos = "http://cran.us.r-project.org")
install_version("roxygen2", version = "6.1.0.0", repos = "http://cran.us.r-project.org")
library(devtools)
install_version("roxygen2", version = "6.1.0.9", repos = "http://cran.us.r-project.org")
library(roxygen2)
?roxygen2
detach("package:roxygen2", unload=TRUE)
library("roxygen2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("desc")
build_win()
install.packages("pkgdown")
library(pkgdown)
build_site()
release()
sdF_t=function(formla, xformla, data,t,h){
coef=TempleMetrics::llscm(formla,xformla,data,t,h)
formla=as.formula(formla)
YT=model.frame(terms(formla,data=data),data=data)
Y=YT[,1]
T=YT[,2]
n=length(Y)
if (is.null(h)) {
h <- 1.06*sd(T)*n^(-1/5) ## check that this is right
}
if(is.null(xformla)){
X=cbind(1,T-t)
u=Y-X%*%coef
v=c(-(sqrt(5)-1)/2,(sqrt(5)+1)/2)
b_v=rbinom(nrow(X), 1, prob=(sqrt(5)+1)/(2*sqrt(5)))
b_v=ifelse(b_v==1,v[1],v[2])
yhat=X%*%coef + u*b_v
K <- diag(TempleMetrics::k(T-t, h=h, type="gaussian"))
d <- solve(t(X)%*%K%*%X)%*%t(X)%*%K%*%yhat
d[2]
} else {
xformla=as.formula(xformla)
X=model.frame(terms(xformla,data=data),data=data)
Xmat=cbind(1,X,X*(T-t))
Xmat=as.matrix(Xmat)
u=Y-Xmat%*%coef
v=c(-(sqrt(5)-1)/2,(sqrt(5)+1)/2)
b_v=rbinom(nrow(X), 1, prob=(sqrt(5)+1)/(2*sqrt(5)))
b_v=ifelse(b_v==1,v[1],v[2])
yhat=Xmat%*%coef + u*b_v
K <- diag(TempleMetrics::k(T-t, h=h, type="gaussian"))
dd <- solve(t(Xmat)%*%K%*%Xmat)%*%t(Xmat)%*%K%*%yhat
xbar <- as.matrix(apply(X, 2, mean))
m <- ncol(X)
d <- dd[(m+2):length(dd)]
t(xbar)%*%d
}
}
sdF_ts<- function(tvals) {
seq=tvals
for (i in 1:length(tvals)) {
seq[i]=sdF_t(formla=formla, xformla=xformla, data=data,t=tvals[i],h=h)
}
seq
}
ot<- pbapply::pbsapply(1:B, sdF_ts,tvals=tvals)
ot<- pbapply::pbsapply(1:5, sdF_ts,tvals=tvals)
chk <- Sys.getenv("_R_CHECK_LIMIT_CORES_", "")
ot
chk
if (nzchar(chk) && chk == "TRUE") {
# use 2 cores in CRAN/Travis/AppVeyor
num_workers <- 2L
} else {
# use all cores in devtools::test()
num_workers <- parallel::detectCores()
}
nzchar(chk)
library(devtools)
build_win()
document()
library(pkgdown)
build_site()
which R
R
R()
R.Version()
